package chap02;

import org.springframework.context.ApplicationContext;
import org.springframework.context.support.GenericXmlApplicationContext;

public class Main {
	public static void main(String[] args) {
		// String.format 문자열을 포맷팅 : printf와 다른 점은 리턴값이 있고, 콘솔 출력을 하지 않음
//		String msg = String.format("안녕하세요, %s 님 %d + %d 는 무엇입니까?", "홍길동", 2, 3);
//		System.out.println(msg);
		
//		Greeter greeter = new Greeter(); // 객체 생성
//		greeter.setFormat("%s님, 안녕하세요"); // 초기화. set
//		
//		String msg = greeter.greet("스프링");
//		
//		System.out.println(msg);

		
		// ApplicationContext : 스프링 컨테이너의 인터페이스
		// GenericXmlApplicationContext : XML 설정 정보를 읽는 스프링 컨테이너의 구현체
		// applicationContext.xml : 스프링 설정 파일 (스프링 빈의 생성, 초기화)
		
		ApplicationContext ctx = new GenericXmlApplicationContext("classpath:applicationContext.xml"); 
		// applicationContext.xml의 설정 정보를 읽어(GenericXmlApplicationContext)와 스프링 설정 파일 ctx 에 저장한다.(ApplicationContext)
		// 스프링 컨테이너 생성
		
		//ctx.getBean(param1, param2);
		// param1 : 스프링 빈의 이름 (bean 태그에서  id로 지정한 값)
		// param2 : 스프링 빈의 타입 
		Greeter g = ctx.getBean("greeter", Greeter.class);
		String msg = g.greet("스프링");
		
		// 이름이 test 인 스프링 빈이 존재하는가?
		System.out.println(ctx.containsBean("test"));
		System.out.println(ctx.containsBean("greeter"));
		System.out.println();
		
		// greeter 빈은 싱글톤 빈인가? 
		System.out.println(ctx.isSingleton("greeter")); // 스프링빈은 싱글톤으로 생성됨
		
		System.out.println(msg);
		
		
	}
}
